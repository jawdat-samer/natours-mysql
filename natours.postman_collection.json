{
	"info": {
		"_postman_id": "59d73004-3b61-482a-ba20-0a627ad6afee",
		"name": "Natours Mysql",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37214280"
	},
	"item": [
		{
			"name": "Tours",
			"item": [
				{
					"name": "Get All Tours",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJItzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwiaWF0IjoxNzI0ODA0Mjg3LCJleHAiOjE3MjQ4MDQyODh9.09qhiTAgGmq4NVzrjPpQ7-UnRpIgyfdDqDnrXDq4Mzo",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}api/v1/tours",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"tours"
							],
							"query": [
								{
									"key": "limit",
									"value": "5",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								}
							]
						},
						"description": "### Get Tours\n\nThis endpoint makes an HTTP GET request to retrieve a list of tours. The request includes query parameters for limiting the number of results.\n\n#### Request Parameters\n\n- `limit` (query parameter, integer) - Specifies the maximum number of tours to be returned in the response.\n    \n\n#### Response\n\nThe response will include the list of tours based on the specified limit."
					},
					"response": []
				},
				{
					"name": "Get Tour",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/tours/2",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"tours",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Tour",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"startLocation\": {\r\n      \"description\": \"California, USA\",\r\n      \"type\": \"Point\",\r\n      \"coordinates\": [-122.29286, 38.294065],\r\n      \"address\": \"560 Jefferson St, Napa, CA 94559, USA\"\r\n    },\r\n    \"ratingsAverage\": 4.4,\r\n    \"ratingsQuantity\": 7,\r\n    \"images\": [\"tour-7-1.jpg\", \"tour-7-2.jpg\", \"tour-7-3.jpg\"],\r\n    \"startDates\": [\r\n      \"2021-02-12T10:00:00.000Z\",\r\n      \"2021-04-14T09:00:00.000Z\",\r\n      \"2021-09-01T09:00:00.000Z\"\r\n    ],\r\n    \"_id\": \"5c88fa8cf4afda39709c296c\",\r\n    \"name\": \"The Wine Taster\",\r\n    \"duration\": 5,\r\n    \"maxGroupSize\": 8,\r\n    \"difficulty\": \"easy\",\r\n    \"guides\": [1],\r\n    \"price\": 1997,\r\n    \"summary\": \"Exquisite wines, scenic views, exclusive barrel tastings,  and much more\",\r\n    \"description\": \"Consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\nIrure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\",\r\n    \"imageCover\": \"tour-7-cover.jpg\",\r\n    \"locations\": [\r\n      {\r\n        \"_id\": \"5c88fa8cf4afda39709c296f\",\r\n        \"description\": \"Beringer Vineyards\",\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [-122.479887, 38.510312],\r\n        \"day\": 1\r\n      },\r\n      {\r\n        \"_id\": \"5c88fa8cf4afda39709c296e\",\r\n        \"description\": \"Clos Pegase Winery & Tasting Room\",\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [-122.582948, 38.585707],\r\n        \"day\": 3\r\n      },\r\n      {\r\n        \"_id\": \"5c88fa8cf4afda39709c296d\",\r\n        \"description\": \"Raymond Vineyard and Cellar\",\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [-122.434697, 38.482181],\r\n        \"day\": 5\r\n      }\r\n    ]\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/tours",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"tours"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Tour",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "imageCover",
									"type": "file",
									"src": "/C:/Users/pc/Desktop/Workspace/learn node.js/natours mysql/dev-data/img/new-tour-1.jpg"
								},
								{
									"key": "images",
									"type": "file",
									"src": "/C:/Users/pc/Desktop/Workspace/learn node.js/natours mysql/dev-data/img/new-tour-2.jpg"
								},
								{
									"key": "images",
									"type": "file",
									"src": "/C:/Users/pc/Desktop/Workspace/learn node.js/natours mysql/dev-data/img/new-tour-3.jpg"
								},
								{
									"key": "images",
									"type": "file",
									"src": "/C:/Users/pc/Desktop/Workspace/learn node.js/natours mysql/dev-data/img/new-tour-4.jpg"
								}
							]
						},
						"url": {
							"raw": "{{URL}}api/v1/tours/2",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"tours",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tour",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/tours/15",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"tours",
								"15"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/users",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Jawdat Samer",
									"type": "text",
									"disabled": true
								},
								{
									"key": "photo",
									"type": "file",
									"src": "/C:/Users/pc/Pictures/1294942.jpg"
								}
							]
						},
						"url": {
							"raw": "{{URL}}api/v1/users/updateMe",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"updateMe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/users/deleteMe",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"deleteMe"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Me",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/users/me",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"me"
							]
						},
						"description": "### Retrieve Current User Information\n\nThis endpoint is used to retrieve the information of the current user.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"email\": {\n                    \"type\": \"string\"\n                },\n                \"photo\": {\n                    \"type\": \"string\"\n                },\n                \"role\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}\n\n ```"
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Laura Wilson\",\r\n    \"email\": \"laura2@example.com\",\r\n    \"password\": \"pass1234\",\r\n    \"passwordConfirm\": \"pass1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/signup",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"admin@example.com\",\r\n    \"password\": \"pass1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/login",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"admin@email.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/forgotPassword",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"forgotPassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"jwt\", pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"12345678\",\r\n    \"passwordConfirm\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/resetPassword/cb76cc678380b06aa6152801708f0c664ec2d36676903327b8a2f7538326ec9e",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"resetPassword",
								"cb76cc678380b06aa6152801708f0c664ec2d36676903327b8a2f7538326ec9e"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/users/updatePassword",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"users",
								"updatePassword"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get All Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}api/v1/tours/4/reviews",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"tours",
								"4",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_id\": \"5c8a355b14eb5c17645c9109\",\r\n    \"review\": \"Tempus curabitur faucibus auctor bibendum duis gravida tincidunt litora himenaeos facilisis vivamus vehicula potenti semper fusce suspendisse sagittis!\",\r\n    \"rating\": 4,\r\n    \"tourId\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}api/v1/reviews",
							"host": [
								"{{URL}}api"
							],
							"path": [
								"v1",
								"reviews"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}